apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$rootDir/tools/jacoco.gradle"

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.alison.appgithubapi"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("$rootDir/distribution/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            if (System.getenv("KEYSTORE") != null) {
                storeFile file(System.getenv("KEYSTORE"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }

    def baseUrl = '"https://api.github.com/"'

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            useProguard false
            shrinkResources false
            debuggable false
            zipAlignEnabled false
            testCoverageEnabled true
            buildConfigField 'String', 'BASE_URL', baseUrl
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            useProguard true
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            buildConfigField 'String', 'BASE_URL', baseUrl
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        blue {
            applicationId "com.example.alison.appgithubapi.blue"
            versionCode 1
            versionName "1.0"
            applicationIdSuffix ".blue"
            versionNameSuffix "-blue"
            dimension "default"
        }

        purple {
            applicationId "com.example.alison.appgithubapi.purple"
            versionCode 1
            versionName "1.0"
            applicationIdSuffix ".purple"
            versionNameSuffix "-purple"
            dimension "default"
        }

        ignoreVariant {
            applicationIdSuffix ".ignoreVariant"
            versionNameSuffix "-ignoreVariant"
            dimension "default"
        }
    }

    variantFilter { variant ->
        if (variant.flavors*.name.contains("ignoreVariant")) {
            setIgnore(true)
        }
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true

        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    androidExtensions{
        experimental true
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxVersion"

    // Circle Image
    implementation "de.hdodenhof:circleimageview:$rootProject.circleImageVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // JUnit
    testImplementation "junit:junit:$rootProject.junitVersion"

    // Mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"

    // MockWebServer
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okhttpVersion"

    // RequestMatcher
    androidTestImplementation "br.com.concretesolutions:requestmatcher:$rootProject.requestMatcherVersion"

    // Espresso
    androidTestImplementation "com.android.support.test:rules:$rootProject.rulesVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}

repositories {
    mavenCentral()
}
