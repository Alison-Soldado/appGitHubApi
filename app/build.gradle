apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.alison.appgithubapi"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def baseUrl = '"https://api.github.com/"'

    buildTypes {
        debug {
            minifyEnabled true
            useProguard false
            buildConfigField 'String', 'BASE_URL', baseUrl
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            buildConfigField 'String', 'BASE_URL', baseUrl
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    flavorDimensions "default"

    productFlavors {
        blue {
            applicationIdSuffix = ".mock"
            dimension "default"
        }

        purple {
            dimension "default"
        }
    }

    androidExtensions{
        experimental true
    }
}

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxVersion"

    // Circle Image
    implementation "de.hdodenhof:circleimageview:$rootProject.circleImageVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    // JUnit
    testImplementation "junit:junit:$rootProject.junitVersion"

    // Mockito
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"

    // MockWebServer
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okhttpVersion"

    // Mirror
    androidTestImplementation "net.vidageek:mirror:1.6.1"

    // Espresso
    androidTestImplementation "com.android.support.test:rules:$rootProject.rulesVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}

repositories {
    mavenCentral()
}
